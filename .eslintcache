[{"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\index.js":"1","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\App.js":"2","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\reportWebVitals.js":"3","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\MainPage\\MainPage.jsx":"4","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\LoginPage\\LoginPage.jsx":"5","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\RegisterPage\\RegisterPage.jsx":"6","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ForgotPasswordPage\\ForgotPasswordPage.jsx":"7","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LoginRegisterNav\\LoginRegisterNav.Component.jsx":"8","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\HomePageNav\\HomePageNav.Component.jsx":"9","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddQuestion\\AddQuestion.component.jsx":"10","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\Switch\\Switch.Component.jsx":"11","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NewPasswordPage\\NewPasswordPage.jsx":"12","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\VerifyEmail\\VerifyEmail.jsx":"13","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AnswerModel\\AnswerModel.component.jsx":"14","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ProfilePage\\ProfilePage.jsx":"15","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\QuestionsPage\\QuestionsPage.jsx":"16","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\QuestionModel\\QuestionModel.Component.jsx":"17","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NoDataCard\\NoDataCard.component.jsx":"18","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\AddAnswerPage\\AddAnswerPage.jsx":"19","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddAnswerModel\\AddAnswerModel.component.jsx":"20","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\UserPage\\UserPage.jsx":"21","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\ProfileBoxHeader\\ProfileBoxHeader.component.jsx":"22","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\helpers\\tokensRefresher.js":"23","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutButton\\LogoutButton.jsx":"24","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutPopup\\LogoutPopup.Component.jsx":"25","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Zustand\\AuthZustand.js":"26","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\SettingsPage\\SettingsPage.jsx":"27","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\FriendsPage\\FriendsPage.jsx":"28","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\FollowedUserCard\\FollowedUserCard.Component.jsx":"29","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\GetAnswerPage\\GetAnswerPage.jsx":"30","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\WebSockets\\WebsocketConnection.js":"31","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NotificationPage\\NotificationPage.jsx":"32","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NotificationCard\\NotificationCard.Component.jsx":"33","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AnswerModelWithAuthor\\AnswerModelWithAuthor.Component.jsx":"34","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NewsFeedPage\\NewsFeedPage.jsx":"35","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NewsFeedAnswerModel\\NewsFeedAnswerModel.Component.jsx":"36","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\helpers\\handleLike.js":"37"},{"size":499,"mtime":1611043478664,"results":"38","hashOfConfig":"39"},{"size":4158,"mtime":1613212690145,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":3354,"mtime":1613203920337,"results":"42","hashOfConfig":"39"},{"size":3565,"mtime":1611043573673,"results":"43","hashOfConfig":"39"},{"size":3656,"mtime":1610252408721,"results":"44","hashOfConfig":"39"},{"size":1814,"mtime":1610252038257,"results":"45","hashOfConfig":"39"},{"size":385,"mtime":1609452009726,"results":"46","hashOfConfig":"39"},{"size":2254,"mtime":1613208617800,"results":"47","hashOfConfig":"39"},{"size":925,"mtime":1609737199631,"results":"48","hashOfConfig":"39"},{"size":599,"mtime":1609737417901,"results":"49","hashOfConfig":"39"},{"size":2438,"mtime":1610252274447,"results":"50","hashOfConfig":"39"},{"size":1124,"mtime":1610252452853,"results":"51","hashOfConfig":"39"},{"size":3799,"mtime":1613208671083,"results":"52","hashOfConfig":"39"},{"size":5625,"mtime":1612927939547,"results":"53","hashOfConfig":"39"},{"size":3057,"mtime":1611198921712,"results":"54","hashOfConfig":"39"},{"size":818,"mtime":1612952169326,"results":"55","hashOfConfig":"39"},{"size":218,"mtime":1610062113325,"results":"56","hashOfConfig":"39"},{"size":3070,"mtime":1611198850872,"results":"57","hashOfConfig":"39"},{"size":1949,"mtime":1611051158274,"results":"58","hashOfConfig":"39"},{"size":5237,"mtime":1612927151911,"results":"59","hashOfConfig":"39"},{"size":2818,"mtime":1612094597746,"results":"60","hashOfConfig":"39"},{"size":286,"mtime":1611198480412,"results":"61","hashOfConfig":"39"},{"size":493,"mtime":1610650059700,"results":"62","hashOfConfig":"39"},{"size":1387,"mtime":1613071136929,"results":"63","hashOfConfig":"39"},{"size":196,"mtime":1611043100727,"results":"64","hashOfConfig":"39"},{"size":6635,"mtime":1613208750548,"results":"65","hashOfConfig":"39"},{"size":1730,"mtime":1612662536462,"results":"66","hashOfConfig":"39"},{"size":529,"mtime":1612263034450,"results":"67","hashOfConfig":"39"},{"size":3982,"mtime":1613231652257,"results":"68","hashOfConfig":"39"},{"size":381,"mtime":1613070394909,"results":"69","hashOfConfig":"39"},{"size":2473,"mtime":1612983859542,"results":"70","hashOfConfig":"39"},{"size":1476,"mtime":1612983805499,"results":"71","hashOfConfig":"39"},{"size":2234,"mtime":1613208557794,"results":"72","hashOfConfig":"39"},{"size":2149,"mtime":1613230386912,"results":"73","hashOfConfig":"39"},{"size":3337,"mtime":1613231509843,"results":"74","hashOfConfig":"39"},{"size":1431,"mtime":1613231437641,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1d055l1",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\index.js",[],["156","157"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\App.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\reportWebVitals.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\MainPage\\MainPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\LoginPage\\LoginPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\RegisterPage\\RegisterPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ForgotPasswordPage\\ForgotPasswordPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LoginRegisterNav\\LoginRegisterNav.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\HomePageNav\\HomePageNav.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddQuestion\\AddQuestion.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\Switch\\Switch.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NewPasswordPage\\NewPasswordPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\VerifyEmail\\VerifyEmail.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AnswerModel\\AnswerModel.component.jsx",["158","159"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ProfilePage\\ProfilePage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\QuestionsPage\\QuestionsPage.jsx",["160"],"import { useEffect, useState } from \"react\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport NoDataCard from \"../../Components/NoDataCard/NoDataCard.component\";\r\nimport QuestionModel from \"../../Components/QuestionModel/QuestionModel.Component\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport tokensRefresher from '../../helpers/tokensRefresher'\r\nimport useStore from '../../Zustand/AuthZustand'\r\nimport \"./questions-page.style.css\";\r\n\r\nconst QuestionsPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const Logout = useStore(state => state.setLogout)\r\n\r\n  //handle delete function\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:4000/questions/deletequestion/${id}`, {\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n      });\r\n      const newQuestions = questions.filter(\r\n        (question) => question.question_id !== id\r\n      );\r\n      setQuestions(newQuestions);\r\n    } catch (error) {\r\n      alert(\"error\");\r\n    }\r\n  };\r\n\r\n  //fetching user questions\r\n  let isMounted = true\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\r\n        \"http://localhost:4000/questions/getquestions\",\r\n        {\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"access-token\": `Bearer ${accessToken}`,\r\n            \"refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if(response.status === 400)return\r\n      if(response.status === 401){\r\n        localStorage.clear()\r\n        Logout()\r\n    }\r\n      if(data.payload != undefined && isMounted) {setQuestions([...data.payload]);}\r\n      tokensRefresher(data)\r\n    })();\r\n    // eslint-disable-next-line\r\n    return ()=> isMounted=false\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"application\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Questions</title>\r\n        </Helmet>\r\n      </div>\r\n      <HomePageNav />\r\n      <div className=\"questions-page-container\">\r\n        {questions.length === 0 ? <NoDataCard data={\"Questions\"} /> : null}\r\n        {questions.map((question) => {\r\n          return (\r\n            <div key={question.question_id}>\r\n              <QuestionModel\r\n                isAnonymous={question.is_anonymous}\r\n                recieverId={question.reciever_id}\r\n                question={question.question}\r\n                date={question.asked_date}\r\n                questionId={question.question_id}\r\n                handleDelete={() => handleDelete(question.question_id)}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionsPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\QuestionModel\\QuestionModel.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NoDataCard\\NoDataCard.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\AddAnswerPage\\AddAnswerPage.jsx",["161"],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport AddAnswerModel from \"../../Components/AddAnswerModel/AddAnswerModel.component\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport tokensRefresher from \"../../helpers/tokensRefresher\";\r\nimport useStore from '../../Zustand/AuthZustand'\r\n\r\nimport \"./add-answer-page.style.css\";\r\nconst AddAnswerPage = () => {\r\n  //state\r\n  const [answer, setAnswer] = useState('');\r\n  const [questionData, setQuestionData] = useState({\r\n    question: \"\",\r\n    isAnonymous: true,\r\n  });\r\n  const [imagePath, setImagePath] = useState(null)\r\n  //getting tokens for sending request\r\n  const questionId = useParams().questionid;\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const Logout = useStore(state => state.setLogout)\r\n  const history = useHistory();\r\n\r\n  //fetching the question data\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\r\n        `http://localhost:4000/questions/getquestion/${questionId}`,\r\n        {\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"access-token\": `Bearer ${accessToken}`,\r\n            \"refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      );\r\n      if(response.status === 401){\r\n        localStorage.clear()\r\n        Logout()\r\n    }\r\n      const data = await response.json();\r\n\r\n      setQuestionData({\r\n        question: data.payload.question,\r\n        isAnonymous: data.payload.isAnonymous,\r\n      });\r\n      tokensRefresher(data);\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (answer.text === \"\") return;\r\n    const response = await fetch(\r\n      `http://localhost:4000/questions/addanswer/${questionId}`,\r\n      {\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n        body: JSON.stringify({\r\n          answer: answer,\r\n          imagePath\r\n        }),\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    tokensRefresher(data);\r\n    if (response.status === 200) {\r\n      history.push(\"/profile\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"application\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Add Answer</title>\r\n        </Helmet>\r\n      </div>\r\n      <HomePageNav />\r\n      <div className=\"add-answer-container\">\r\n        <AddAnswerModel\r\n          handleSubmit={handleSubmit}\r\n          answer={answer.text}\r\n          setAnswer={setAnswer}\r\n          question={questionData.question}\r\n          isAnonymous={questionData.isAnonymous}\r\n          setImagePath={setImagePath}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAnswerPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddAnswerModel\\AddAnswerModel.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\UserPage\\UserPage.jsx",["162","163"],"import AddQuestion from \"../../Components/AddQuestion/AddQuestion.component.jsx\";\r\nimport { useState, useEffect } from \"react\";\r\nimport AnswerModel from \"../../Components/AnswerModel/AnswerModel.component.jsx\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component.jsx\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport NoDataCard from \"../../Components/NoDataCard/NoDataCard.component\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport tokensRefresher from '../../helpers/tokensRefresher'\r\nimport ProfileBoxHeader from \"../../Components/ProfileBoxHeader/ProfileBoxHeader.component.jsx\";\r\nimport useStore from '../../Zustand/AuthZustand'\r\nimport \"../ProfilePage/profile-page.style.css\";\r\n\r\nconst UserPage = () => {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [isAnonymous, setIsAnonymous] = useState(false);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [userData, setUserData] = useState({\r\n    userName:'',\r\n    imagePath: '',\r\n    isFollowed: true,\r\n  })\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const Logout = useStore(state => state.setLogout)\r\n  const profileId = useParams().id;\r\n  const history = useHistory()\r\n  if(profileId === JSON.parse(localStorage.getItem('userId'))){history.push('/profile')}\r\n\r\n  //handleSubmit for Asking a Question\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (question === \"\") return;\r\n    const response = await fetch(\r\n      `http://localhost:4000/questions/askquestion/${profileId}`,\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n        body: JSON.stringify({\r\n          question,\r\n          isAnonymous,\r\n        }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    tokensRefresher(data)\r\n    setQuestion(\"\");\r\n\r\n    if (data[1] !== undefined) {\r\n      localStorage.setItem(\"user\", JSON.stringify(data[1]));\r\n    }\r\n  };\r\n\r\n  //Fetching user data\r\n  useEffect(()=>{\r\n    (async function(){\r\n      const userResponse = await fetch(`http://localhost:4000/user/getuserandimage/${profileId}`, {\r\n        method: 'get',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        }\r\n      })\r\n      const userData = (await userResponse.json()).payload[0]\r\n      if(userData.user_image != null){\r\n        var userImage = userData.user_image;\r\n      }\r\n      const userName = userData.user_name\r\n      setUserData({userName,imagePath: `http://localhost:4000/${userImage}`,isFollowed: true})\r\n    })()\r\n  }, [])\r\n\r\n\r\n  //Fetching user Answers\r\n  let isMounted = true\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\r\n        `http://localhost:4000/questions/getanswers/${profileId}`,\r\n        {\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"access-token\": `Bearer ${accessToken}`,\r\n            \"refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setAnswers(data.payload)\r\n      tokensRefresher(data)\r\n      if (response.status === 400) return;\r\n      if(response.status === 401){\r\n        localStorage.clear()\r\n        Logout()\r\n    }\r\n        if(isMounted){setAnswers(data.payload);}\r\n    })();\r\n    //preventing memory leak\r\n    return()=> {isMounted = false}\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>{userData.userName} profile</title>\r\n      </Helmet>\r\n      <HomePageNav />\r\n      <div className=\"profile-page-container\">\r\n        <ProfileBoxHeader\r\n        profilename = {userData.userName}\r\n        image = {userData.imagePath}\r\n        isFollowed = {userData.isFollowed}\r\n        />\r\n        <AddQuestion\r\n          question={question}\r\n          setQuestion={setQuestion}\r\n          handleSubmit={handleSubmit}\r\n          isAnonymous={isAnonymous}\r\n          setIsAnonymous={setIsAnonymous}\r\n        />\r\n        {answers.length !== 0 ? (\r\n          answers.map((answer) => {\r\n            return (\r\n              <div key={answer.question_id}>\r\n                <AnswerModel\r\n                question={answer.question}\r\n                answeredDate={answer.answered_date}\r\n                answer={answer.answer}\r\n                isAnonymous={answer.is_anonymous}\r\n                likedBy={answer.liked_by}\r\n                numberOfLikes={answer.liked_by? answer.liked_by.length : 0}\r\n                questionId={answer.question_id}\r\n                image={answer.answer_image}\r\n                senderId = {answer.sender_id}\r\n                userName={answer.user_name}\r\n                userImage={answer.user_image}\r\n                deleteHidden={true}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <NoDataCard data={\"answers\"} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\ProfileBoxHeader\\ProfileBoxHeader.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\helpers\\tokensRefresher.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutButton\\LogoutButton.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutPopup\\LogoutPopup.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Zustand\\AuthZustand.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\SettingsPage\\SettingsPage.jsx",["164"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\FriendsPage\\FriendsPage.jsx",["165"],"import { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport FollowedUserCard from \"../../Components/FollowedUserCard/FollowedUserCard.Component\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport NoDataCard from \"../../Components/NoDataCard/NoDataCard.component\";\r\nimport \"./friends-page.style.css\";\r\n\r\nconst FriendsPage = () => {\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    imagePath: \"\",\r\n    userId: \"\",\r\n  });\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\"http://localhost:4000/getfollowing\", {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n      });\r\n      const data = (await response.json()).payload;\r\n      console.log(data);\r\n      setUserData(data)\r\n    })();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Following</title>\r\n      </Helmet>\r\n      <HomePageNav />\r\n      <div className=\"friends-page-container\">\r\n          {userData.length? \r\n          userData.map(user => {\r\n              return(\r\n                  <div key={user.is_following}>\r\n                      <FollowedUserCard username={user.user_name} userImage={user.user_image} userId={user.is_following} />\r\n                  </div>\r\n              )\r\n          })\r\n          : <NoDataCard data=\"users\" />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendsPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\FollowedUserCard\\FollowedUserCard.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\GetAnswerPage\\GetAnswerPage.jsx",["166","167"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\WebSockets\\WebsocketConnection.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NotificationPage\\NotificationPage.jsx",["168"],"import { useState, useEffect } from \"react\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport Helmet from \"react-helmet\";\r\nimport \"./notification-page.style.css\";\r\nimport NotificationCard from \"../../Components/NotificationCard/NotificationCard.Component\";\r\n\r\nconst NotificationPage = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\r\n        `http://localhost:4000/users/notifications`,\r\n        {\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"access-token\": `Bearer ${accessToken}`,\r\n            \"refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      setNotifications(data.payload);\r\n    })();\r\n  }, []);\r\n\r\n  //Handle NotificationClick\r\n  const handleNotificationClick = async (id) => {\r\n    await fetch(`http://localhost:4000/users/marknotificationread/${id}`, {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"access-token\": `Bearer ${accessToken}`,\r\n        \"refresh-token\": refreshToken,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title> Notifications </title>\r\n      </Helmet>\r\n      <HomePageNav />\r\n      <div className=\"notificatons-page-contatiner\">\r\n        {notifications.map((notification) => {\r\n          return (\r\n            <div key={notification.notification_id}>\r\n              <NotificationCard\r\n                notificationType={notification.notification_type}\r\n                notificationSenderName={notification.user_name}\r\n                notificationSenderImage={notification.user_image}\r\n                notificationDate={notification.notification_date}\r\n                isQuestionAnonymous={notification.is_anonymous}\r\n                notificationSender={`/user/${notification.notification_sender}`}\r\n                questionId={notification.question_id}\r\n                notificationId={notification.notification_id}\r\n                handleNotificationClick={handleNotificationClick}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NotificationCard\\NotificationCard.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AnswerModelWithAuthor\\AnswerModelWithAuthor.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NewsFeedPage\\NewsFeedPage.jsx",["169"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NewsFeedAnswerModel\\NewsFeedAnswerModel.Component.jsx",["170"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\helpers\\handleLike.js",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":31,"column":17,"nodeType":"177","messageId":"178","endLine":31,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":36,"column":6,"nodeType":"181","endLine":36,"endColumn":8,"suggestions":"182"},{"ruleId":"175","severity":1,"message":"176","line":57,"column":23,"nodeType":"177","messageId":"178","endLine":57,"endColumn":25},{"ruleId":"179","severity":1,"message":"183","line":52,"column":6,"nodeType":"181","endLine":52,"endColumn":8,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"185","line":75,"column":6,"nodeType":"181","endLine":75,"endColumn":8,"suggestions":"186"},{"ruleId":"179","severity":1,"message":"187","line":104,"column":29,"nodeType":"188","endLine":104,"endColumn":34},{"ruleId":"179","severity":1,"message":"189","line":56,"column":6,"nodeType":"181","endLine":56,"endColumn":8,"suggestions":"190"},{"ruleId":"179","severity":1,"message":"191","line":30,"column":6,"nodeType":"181","endLine":30,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":23},{"ruleId":"179","severity":1,"message":"197","line":39,"column":6,"nodeType":"181","endLine":39,"endColumn":8,"suggestions":"198"},{"ruleId":"179","severity":1,"message":"191","line":28,"column":6,"nodeType":"181","endLine":28,"endColumn":8,"suggestions":"199"},{"ruleId":"179","severity":1,"message":"191","line":26,"column":4,"nodeType":"181","endLine":26,"endColumn":6,"suggestions":"200"},{"ruleId":"179","severity":1,"message":"201","line":49,"column":6,"nodeType":"181","endLine":49,"endColumn":8,"suggestions":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'likedBy' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["205"],"React Hook useEffect has missing dependencies: 'Logout', 'accessToken', 'questionId', and 'refreshToken'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'accessToken', 'profileId', and 'refreshToken'. Either include them or remove the dependency array.",["207"],"Assignments to the 'isMounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'Logout', 'accessToken', and 'refreshToken'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'accessToken' and 'refreshToken'. Either include them or remove the dependency array.",["209"],"no-unused-vars","'tokensRefresher' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'accessToken', 'questionId', 'refreshToken', and 'userId'. Either include them or remove the dependency array.",["210"],["211"],["212"],"React Hook useEffect has missing dependencies: 'accessToken', 'recieverId', and 'refreshToken'. Either include them or remove the dependency array.",["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"222","fix":"226"},{"desc":"222","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [likedBy, userId]",{"range":"230","text":"231"},"Update the dependencies array to be: [Logout, accessToken, questionId, refreshToken]",{"range":"232","text":"233"},"Update the dependencies array to be: [accessToken, profileId, refreshToken]",{"range":"234","text":"235"},"Update the dependencies array to be: [Logout, accessToken, refreshToken]",{"range":"236","text":"237"},"Update the dependencies array to be: [accessToken, refreshToken]",{"range":"238","text":"239"},"Update the dependencies array to be: [accessToken, questionId, refreshToken, userId]",{"range":"240","text":"241"},{"range":"242","text":"239"},{"range":"243","text":"239"},"Update the dependencies array to be: [accessToken, recieverId, refreshToken]",{"range":"244","text":"245"},[1080,1082],"[likedBy, userId]",[1799,1801],"[Logout, accessToken, questionId, refreshToken]",[2826,2828],"[accessToken, profileId, refreshToken]",[1817,1819],"[Logout, accessToken, refreshToken]",[1108,1110],"[accessToken, refreshToken]",[1561,1563],"[accessToken, questionId, refreshToken, userId]",[1016,1018],[999,1001],[1393,1395],"[accessToken, recieverId, refreshToken]"]