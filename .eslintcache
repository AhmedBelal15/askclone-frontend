[{"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\index.js":"1","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\App.js":"2","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\reportWebVitals.js":"3","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\MainPage\\MainPage.jsx":"4","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\LoginPage\\LoginPage.jsx":"5","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\RegisterPage\\RegisterPage.jsx":"6","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ForgotPasswordPage\\ForgotPasswordPage.jsx":"7","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LoginRegisterNav\\LoginRegisterNav.Component.jsx":"8","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\HomePage\\HomePage.jsx":"9","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\HomePageNav\\HomePageNav.Component.jsx":"10","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddQuestion\\AddQuestion.component.jsx":"11","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\Switch\\Switch.Component.jsx":"12","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NewPasswordPage\\NewPasswordPage.jsx":"13","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\VerifyEmail\\VerifyEmail.jsx":"14","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AnswerModel\\AnswerModel.component.jsx":"15","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ProfilePage\\ProfilePage.jsx":"16","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\QuestionsPage\\QuestionsPage.jsx":"17","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\QuestionModel\\QuestionModel.Component.jsx":"18","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NoDataCard\\NoDataCard.component.jsx":"19","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\AddAnswerPage\\AddAnswerPage.jsx":"20","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddAnswerModel\\AddAnswerModel.component.jsx":"21","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\UserPage\\UserPage.jsx":"22","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\ProfileBoxHeader\\ProfileBoxHeader.component.jsx":"23","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\helpers\\tokensRefresher.js":"24","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutButton\\LogoutButton.jsx":"25","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutPopup\\LogoutPopup.Component.jsx":"26","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Zustand\\AuthZustand.js":"27","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\SettingsPage\\SettingsPage.jsx":"28","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\FriendsPage\\FriendsPage.jsx":"29","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\FollowedUserCard\\FollowedUserCard.Component.jsx":"30","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\GetAnswerPage\\GetAnswerPage.jsx":"31"},{"size":499,"mtime":1611043478664,"results":"32","hashOfConfig":"33"},{"size":3502,"mtime":1612664694547,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":3236,"mtime":1610252220066,"results":"36","hashOfConfig":"33"},{"size":3565,"mtime":1611043573673,"results":"37","hashOfConfig":"33"},{"size":3656,"mtime":1610252408721,"results":"38","hashOfConfig":"33"},{"size":1814,"mtime":1610252038257,"results":"39","hashOfConfig":"33"},{"size":385,"mtime":1609452009726,"results":"40","hashOfConfig":"33"},{"size":737,"mtime":1610656043106,"results":"41","hashOfConfig":"33"},{"size":2285,"mtime":1611199502722,"results":"42","hashOfConfig":"33"},{"size":925,"mtime":1609737199631,"results":"43","hashOfConfig":"33"},{"size":599,"mtime":1609737417901,"results":"44","hashOfConfig":"33"},{"size":2438,"mtime":1610252274447,"results":"45","hashOfConfig":"33"},{"size":1124,"mtime":1610252452853,"results":"46","hashOfConfig":"33"},{"size":3839,"mtime":1612693506986,"results":"47","hashOfConfig":"33"},{"size":5500,"mtime":1612692721131,"results":"48","hashOfConfig":"33"},{"size":3057,"mtime":1611198921712,"results":"49","hashOfConfig":"33"},{"size":827,"mtime":1610251784847,"results":"50","hashOfConfig":"33"},{"size":218,"mtime":1610062113325,"results":"51","hashOfConfig":"33"},{"size":3070,"mtime":1611198850872,"results":"52","hashOfConfig":"33"},{"size":1949,"mtime":1611051158274,"results":"53","hashOfConfig":"33"},{"size":5160,"mtime":1612692728286,"results":"54","hashOfConfig":"33"},{"size":2818,"mtime":1612094597746,"results":"55","hashOfConfig":"33"},{"size":286,"mtime":1611198480412,"results":"56","hashOfConfig":"33"},{"size":493,"mtime":1610650059700,"results":"57","hashOfConfig":"33"},{"size":874,"mtime":1611043315088,"results":"58","hashOfConfig":"33"},{"size":196,"mtime":1611043100727,"results":"59","hashOfConfig":"33"},{"size":6643,"mtime":1611301061330,"results":"60","hashOfConfig":"33"},{"size":1730,"mtime":1612662536462,"results":"61","hashOfConfig":"33"},{"size":529,"mtime":1612263034450,"results":"62","hashOfConfig":"33"},{"size":1873,"mtime":1612693719723,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1d055l1",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\index.js",[],["133","134"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\App.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\reportWebVitals.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\MainPage\\MainPage.jsx",["135","136","137","138","139","140","141","142","143"],"import React from \"react\";\r\nimport logo from \"../../Assets/ask-logo.png\";\r\nimport AppStore from \"../../Assets/app-store.png\";\r\nimport GooglePlay from \"../../Assets/google-play.png\";\r\nimport AppGallery from \"../../Assets/app-gallery.png\";\r\nimport { ReactComponent as AskLogo } from \"../../Assets/social-icons/askfm.svg\";\r\nimport { ReactComponent as FacebookLogo } from \"../../Assets/social-icons/facebook.svg\";\r\nimport { ReactComponent as GithubLogo } from \"../../Assets/social-icons/github.svg\";\r\nimport { ReactComponent as InstagramLogo } from \"../../Assets/social-icons/instagram.svg\";\r\nimport { ReactComponent as TwitterLogo } from \"../../Assets/social-icons/twitter.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"./main-page.style.css\";\r\nconst MainPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"application\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Home Page</title>\r\n        </Helmet>\r\n      </div>\r\n      <div className=\"main-page\">\r\n        <div className=\"top\">\r\n          <img src={logo} alt=\"Ask fm Logo\" className=\"ask-logo\" />\r\n          <h1>\r\n            Curious? <strong> Just ask! </strong> <br />{\" \"}\r\n            <strong>Openly or anonymously.</strong>{\" \"}\r\n          </h1>\r\n          <Link to=\"/register\">\r\n            <button className=\"register-button\">Register</button>\r\n          </Link>\r\n          <Link to=\"/login\">\r\n            <button className=\"login-button\">Login</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"stores\">\r\n          <img src={AppStore} alt=\"App Store\" className=\"store\" />\r\n          <img src={GooglePlay} alt=\"Google Play\" className=\"store\" />\r\n          <img src={AppGallery} alt=\"App Gallery\" className=\"store\" />\r\n        </div>\r\n      </div>\r\n      <footer className=\"main-page-footer\">\r\n        <h2>pictures placeholder</h2>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#\">About ASKfm</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Safety center</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Help</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Community Guidelines</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Terms of use</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Privacy policy</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\"> Cookies policy</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Advertising</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#\">Professionals</a>\r\n          </li>\r\n        </ul>\r\n        <hr />\r\n        <div className=\"languages-socials\">\r\n          <div className=\"language\">\r\n            <span>\r\n              Language: <span>English</span>{\" \"}\r\n            </span>\r\n          </div>\r\n          <div className=\"socials\">\r\n            <AskLogo className=\"social-logo\" />\r\n            <FacebookLogo className=\"social-logo\" />\r\n            <InstagramLogo className=\"social-logo\" />\r\n            <GithubLogo className=\"social-logo\" />\r\n            <TwitterLogo className=\"social-logo\" />\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\LoginPage\\LoginPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\RegisterPage\\RegisterPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ForgotPasswordPage\\ForgotPasswordPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LoginRegisterNav\\LoginRegisterNav.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\HomePage\\HomePage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\HomePageNav\\HomePageNav.Component.jsx",["144"],"import { Link } from \"react-router-dom\";\r\nimport {useState} from 'react'\r\nimport {ReactComponent as SettingsIcon} from '../../Assets/nav-icons/settings_icon.svg'\r\nimport {ReactComponent as NotificationIcon} from '../../Assets/nav-icons/notification-icon.svg'\r\nimport {ReactComponent as HomeIcon} from '../../Assets/nav-icons/home-icon.svg'\r\nimport UserIcon from '../../Assets/nav-icons/user-icon.png'\r\nimport QuestionIcon from '../../Assets/nav-icons/question-icon.png'\r\nimport  FriendsIcon from '../../Assets/nav-icons/friends-icon.png'\r\nimport AskLogo from \"../../Assets/ask-logo.png\";\r\nimport LogoutButton from '../LogoutButton/LogoutButton'\r\n\r\nimport \"./home-page-nav.stlye.css\";\r\nimport LogoutPopup from \"../LogoutPopup/LogoutPopup.Component\";\r\n\r\nconst HomePageNav = () => {\r\n  const [logoutPopup, setLogoutPopup] = useState(false)\r\n\r\n  const handleVisibility = () => {\r\n    setLogoutPopup(!logoutPopup)\r\n    \r\n  }\r\n  const handleLogout = () => {}\r\n  return (\r\n   \r\n    <>\r\n    <div className='nav-container'>\r\n    <nav>\r\n      <div className=\"home-page-nav\">\r\n        <div className='nav-icons-container'>\r\n          <div onClick={handleVisibility}>\r\n          <LogoutButton />\r\n          </div>\r\n          <Link to='/settings'><SettingsIcon className='nav-icon'  alt='settings icon' title='Settings' /></Link>\r\n          <Link to='/notifications'><NotificationIcon className='nav-icon' alt='notifications icon' title='Notification' /></Link>\r\n          <Link to='/following'><img src={FriendsIcon} alt=\"friends icon\" className='nav-icon' title='Following' /></Link>\r\n          <Link to='/profile'><img src={UserIcon} className='nav-icon' alt=\"profile icon\" title=\"Profile\" /></Link>\r\n          <Link to='/questions'><img src={QuestionIcon} className='nav-icon' alt=\"question icon\" title='Questions' /></Link>\r\n          <Link to='/home'><HomeIcon className='nav-icon' alt='home icon' title=\"Home\" /></Link>\r\n        </div>\r\n\r\n        <div>\r\n          <Link to='/home'>\r\n            <img src={AskLogo} alt=\"askfm logo\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    <div className='logout-nav'>\r\n    <LogoutPopup isVisible={logoutPopup} handleVisibility={handleVisibility} />\r\n    </div>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePageNav;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddQuestion\\AddQuestion.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\Switch\\Switch.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\NewPasswordPage\\NewPasswordPage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\VerifyEmail\\VerifyEmail.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AnswerModel\\AnswerModel.component.jsx",["145","146","147","148","149"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\ProfilePage\\ProfilePage.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\QuestionsPage\\QuestionsPage.jsx",["150"],"import { useEffect, useState } from \"react\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport NoDataCard from \"../../Components/NoDataCard/NoDataCard.component\";\r\nimport QuestionModel from \"../../Components/QuestionModel/QuestionModel.Component\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport tokensRefresher from '../../helpers/tokensRefresher'\r\nimport useStore from '../../Zustand/AuthZustand'\r\nimport \"./questions-page.style.css\";\r\n\r\nconst QuestionsPage = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const Logout = useStore(state => state.setLogout)\r\n\r\n  //handle delete function\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await fetch(`http://localhost:4000/questions/deletequestion/${id}`, {\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n      });\r\n      const newQuestions = questions.filter(\r\n        (question) => question.question_id !== id\r\n      );\r\n      setQuestions(newQuestions);\r\n    } catch (error) {\r\n      alert(\"error\");\r\n    }\r\n  };\r\n\r\n  //fetching user questions\r\n  let isMounted = true\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\r\n        \"http://localhost:4000/questions/getquestions\",\r\n        {\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"access-token\": `Bearer ${accessToken}`,\r\n            \"refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if(response.status === 400)return\r\n      if(response.status === 401){\r\n        localStorage.clear()\r\n        Logout()\r\n    }\r\n      if(data.payload != undefined && isMounted) {setQuestions([...data.payload]);}\r\n      tokensRefresher(data)\r\n    })();\r\n    // eslint-disable-next-line\r\n    return ()=> isMounted=false\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"application\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Questions</title>\r\n        </Helmet>\r\n      </div>\r\n      <HomePageNav />\r\n      <div className=\"questions-page-container\">\r\n        {questions.length === 0 ? <NoDataCard data={\"Questions\"} /> : null}\r\n        {questions.map((question) => {\r\n          return (\r\n            <div key={question.question_id}>\r\n              <QuestionModel\r\n                isAnonymous={question.is_anonymous}\r\n                recieverId={question.reciever_id}\r\n                question={question.question}\r\n                date={question.asked_date}\r\n                questionId={question.question_id}\r\n                handleDelete={() => handleDelete(question.question_id)}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionsPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\QuestionModel\\QuestionModel.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\NoDataCard\\NoDataCard.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\AddAnswerPage\\AddAnswerPage.jsx",["151"],"import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport AddAnswerModel from \"../../Components/AddAnswerModel/AddAnswerModel.component\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport tokensRefresher from \"../../helpers/tokensRefresher\";\r\nimport useStore from '../../Zustand/AuthZustand'\r\n\r\nimport \"./add-answer-page.style.css\";\r\nconst AddAnswerPage = () => {\r\n  //state\r\n  const [answer, setAnswer] = useState('');\r\n  const [questionData, setQuestionData] = useState({\r\n    question: \"\",\r\n    isAnonymous: true,\r\n  });\r\n  const [imagePath, setImagePath] = useState(null)\r\n  //getting tokens for sending request\r\n  const questionId = useParams().questionid;\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const Logout = useStore(state => state.setLogout)\r\n  const history = useHistory();\r\n\r\n  //fetching the question data\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\r\n        `http://localhost:4000/questions/getquestion/${questionId}`,\r\n        {\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"access-token\": `Bearer ${accessToken}`,\r\n            \"refresh-token\": refreshToken,\r\n          },\r\n        }\r\n      );\r\n      if(response.status === 401){\r\n        localStorage.clear()\r\n        Logout()\r\n    }\r\n      const data = await response.json();\r\n\r\n      setQuestionData({\r\n        question: data.payload.question,\r\n        isAnonymous: data.payload.isAnonymous,\r\n      });\r\n      tokensRefresher(data);\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (answer.text === \"\") return;\r\n    const response = await fetch(\r\n      `http://localhost:4000/questions/addanswer/${questionId}`,\r\n      {\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n        body: JSON.stringify({\r\n          answer: answer,\r\n          imagePath\r\n        }),\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    tokensRefresher(data);\r\n    if (response.status === 200) {\r\n      history.push(\"/profile\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"application\">\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Add Answer</title>\r\n        </Helmet>\r\n      </div>\r\n      <HomePageNav />\r\n      <div className=\"add-answer-container\">\r\n        <AddAnswerModel\r\n          handleSubmit={handleSubmit}\r\n          answer={answer.text}\r\n          setAnswer={setAnswer}\r\n          question={questionData.question}\r\n          isAnonymous={questionData.isAnonymous}\r\n          setImagePath={setImagePath}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAnswerPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\AddAnswerModel\\AddAnswerModel.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\UserPage\\UserPage.jsx",["152","153"],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\ProfileBoxHeader\\ProfileBoxHeader.component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\helpers\\tokensRefresher.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutButton\\LogoutButton.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\LogoutPopup\\LogoutPopup.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Zustand\\AuthZustand.js",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\SettingsPage\\SettingsPage.jsx",["154","155"],"import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport tokensRefresher from \"../../helpers/tokensRefresher\";\r\nimport useStore from \"../../Zustand/AuthZustand\";\r\nimport \"./settings-page.style.css\";\r\n\r\nconst SettingsPage = () => {\r\n  const [settings, setSettings] = useState({\r\n    name: \"\",\r\n    location: \"\",\r\n    email: \"\",\r\n    bio: \"\",\r\n    birthday: \"\",\r\n    gender: \"\",\r\n    imagePath: null,\r\n  });\r\n  console.log(settings);\r\n  const { name, location, email, bio, birthday, gender, imagePath } = settings;\r\n  const history = useHistory();\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const Logout = useStore((state) => state.setLogout);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\"http://localhost:4000/user/getsettings\", {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (response.status === 401) {\r\n        localStorage.clear();\r\n        Logout();\r\n      }\r\n      if (response.status === 200) {\r\n        tokensRefresher(data);\r\n\r\n\r\n          setSettings({\r\n            name: data.payload.user_name,\r\n            location: data.payload.user_location,\r\n            email: data.payload.user_email,\r\n            bio: data.payload.user_bio,\r\n            birthday: data.payload.user_birthday,\r\n            gender: data.payload.user_gender,\r\n            imagePath: data.payload.user_image,\r\n          });\r\n\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:4000/user/settings\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"access-token\": `Bearer ${accessToken}`,\r\n        \"refresh-token\": refreshToken,\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        location,\r\n        email,\r\n        bio,\r\n        birthday,\r\n        gender,\r\n        imagePath,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (response.status === 200) {\r\n      tokensRefresher(data);\r\n      history.go(0);\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", e.target.files[0]);\r\n    const response = await fetch(\"http://localhost:4000/upload/image\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"access-token\": `Bearer ${accessToken}`,\r\n        \"refresh-token\": refreshToken,\r\n      },\r\n      body: formData,\r\n    });\r\n    const data = await response.json();\r\n    setSettings({ ...settings, imagePath: data.payload });\r\n  };\r\n\r\n  const today = new Date().toISOString().substring(0, 10);\r\n  const minDate = new Date().getFullYear() - 100;\r\n  return (\r\n    <>\r\n      <HomePageNav />\r\n      <div className=\"settings-page-container\">\r\n        <form className=\"settings-form\" onSubmit={handleSubmit}>\r\n          <label htmlFor=\"name\" className=\"settings-form-label\">\r\n            Full name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            id=\"name\"\r\n            required\r\n            value={settings.name}\r\n            onChange={(e) => setSettings({ ...settings, name: e.target.value })}\r\n          />\r\n\r\n          <label htmlFor=\"location\" className=\"settings-form-label\">\r\n            Location\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            id=\"location\"\r\n            value={settings.location}\r\n            onChange={(e) =>\r\n              setSettings({ ...settings, location: e.target.value })\r\n            }\r\n          />\r\n\r\n          <label htmlFor=\"bio\" className=\"settings-form-label\">\r\n            About me\r\n          </label>\r\n          <textarea\r\n            id=\"bio\"\r\n            value={settings.bio}\r\n            onChange={(e) => setSettings({ ...settings, bio: e.target.value })}\r\n            placeholder=\"Biography\"\r\n          />\r\n\r\n          <label htmlFor=\"email\" className=\"settings-form-label\">\r\n            Change your email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            value={settings.email}\r\n            onChange={(e) =>\r\n              setSettings({ ...settings, email: e.target.value })\r\n            }\r\n          />\r\n\r\n          <label htmlFor=\"date\" className=\"settings-form-label\">\r\n            Birthday\r\n          </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            min={`${minDate}-01-01`}\r\n            max={today}\r\n            onChange={(e) =>\r\n              setSettings({ ...settings, birthday: e.target.value })\r\n            }\r\n            value={settings.birthday}\r\n          />\r\n          <label htmlFor=\"gender\" className=\"settings-form-label\">\r\n            Gender\r\n          </label>\r\n\r\n          <select\r\n            id=\"gender\"\r\n            value={settings.gender}\r\n            onChange={(e) =>\r\n              setSettings({ ...settings, gender: e.target.value })\r\n            }\r\n          >\r\n            <option>Male</option>\r\n            <option>Female</option>\r\n            <option>Better not Specify</option>\r\n          </select>\r\n\r\n          <div className=\"image-buttons-container\">\r\n            <label\r\n              htmlFor=\"profile-image-input\"\r\n              className=\"settings-image-input\"\r\n            >\r\n              Change profile image\r\n            </label>\r\n            {settings.imagePath ? (\r\n              <button\r\n                className=\"discard-button\"\r\n                onClick={() => setSettings({ ...settings, imagePath: null })}\r\n              >\r\n                Discard\r\n              </button>\r\n            ) : null}\r\n            <input\r\n              id=\"profile-image-input\"\r\n              type=\"file\"\r\n              onChange={handleImageUpload}\r\n            />\r\n          </div>\r\n          {settings.imagePath ? (\r\n            <img\r\n              src={`http://localhost:4000/${settings.imagePath}`}\r\n              alt=\"profile picture\"\r\n              className=\"settings-profile-image\"\r\n            />\r\n          ) : null}\r\n\r\n          <button type=\"submit\" className=\"settings-button\">\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\FriendsPage\\FriendsPage.jsx",["156"],"import { useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport FollowedUserCard from \"../../Components/FollowedUserCard/FollowedUserCard.Component\";\r\nimport HomePageNav from \"../../Components/HomePageNav/HomePageNav.Component\";\r\nimport NoDataCard from \"../../Components/NoDataCard/NoDataCard.component\";\r\nimport \"./friends-page.style.css\";\r\n\r\nconst FriendsPage = () => {\r\n  const accessToken = JSON.parse(localStorage.getItem(\"accessToken\"));\r\n  const refreshToken = JSON.parse(localStorage.getItem(\"refreshToken\"));\r\n  const [userData, setUserData] = useState({\r\n    username: \"\",\r\n    imagePath: \"\",\r\n    userId: \"\",\r\n  });\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetch(\"http://localhost:4000/getfollowing\", {\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"access-token\": `Bearer ${accessToken}`,\r\n          \"refresh-token\": refreshToken,\r\n        },\r\n      });\r\n      const data = (await response.json()).payload;\r\n      console.log(data);\r\n      setUserData(data)\r\n    })();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Following</title>\r\n      </Helmet>\r\n      <HomePageNav />\r\n      <div className=\"friends-page-container\">\r\n          {userData.length? \r\n          userData.map(user => {\r\n              return(\r\n                  <div key={user.is_following}>\r\n                      <FollowedUserCard username={user.user_name} userImage={user.user_image} userId={user.is_following} />\r\n                  </div>\r\n              )\r\n          })\r\n          : <NoDataCard data=\"users\" />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendsPage;\r\n","D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Components\\FollowedUserCard\\FollowedUserCard.Component.jsx",[],"D:\\Ahmed\\Web\\Projects\\Ask FM\\askclone-frontend\\src\\Pages\\GetAnswerPage\\GetAnswerPage.jsx",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":47,"column":13,"nodeType":"164","endLine":47,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":50,"column":13,"nodeType":"164","endLine":50,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":53,"column":13,"nodeType":"164","endLine":53,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":56,"column":13,"nodeType":"164","endLine":56,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":59,"column":13,"nodeType":"164","endLine":59,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":62,"column":13,"nodeType":"164","endLine":62,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":65,"column":13,"nodeType":"164","endLine":65,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":68,"column":13,"nodeType":"164","endLine":68,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":71,"column":13,"nodeType":"164","endLine":71,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":22,"column":9,"nodeType":"167","messageId":"168","endLine":22,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":30,"column":17,"nodeType":"171","messageId":"172","endLine":30,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":35,"column":6,"nodeType":"175","endLine":35,"endColumn":8,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"170","line":39,"column":17,"nodeType":"171","messageId":"172","endLine":39,"endColumn":19},{"ruleId":"173","severity":1,"message":"177","line":42,"column":6,"nodeType":"175","endLine":42,"endColumn":8,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":115,"column":9,"nodeType":"164","endLine":115,"endColumn":74},{"ruleId":"169","severity":1,"message":"170","line":57,"column":23,"nodeType":"171","messageId":"172","endLine":57,"endColumn":25},{"ruleId":"173","severity":1,"message":"181","line":52,"column":6,"nodeType":"175","endLine":52,"endColumn":8,"suggestions":"182"},{"ruleId":"173","severity":1,"message":"183","line":75,"column":6,"nodeType":"175","endLine":75,"endColumn":8,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"185","line":104,"column":29,"nodeType":"186","endLine":104,"endColumn":34},{"ruleId":"173","severity":1,"message":"187","line":56,"column":6,"nodeType":"175","endLine":56,"endColumn":8,"suggestions":"188"},{"ruleId":"179","severity":1,"message":"180","line":206,"column":13,"nodeType":"164","endLine":210,"endColumn":15},{"ruleId":"173","severity":1,"message":"189","line":30,"column":6,"nodeType":"175","endLine":30,"endColumn":8,"suggestions":"190"},{"ruleId":"173","severity":1,"message":"191","line":31,"column":6,"nodeType":"175","endLine":31,"endColumn":8,"suggestions":"192"},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'handleLogout' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'likedBy' and 'userId'. Either include them or remove the dependency array.","ArrayExpression",["195"],"React Hook useEffect has a missing dependency: 'likedBy'. Either include it or remove the dependency array.",["196"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'Logout', 'accessToken', 'questionId', and 'refreshToken'. Either include them or remove the dependency array.",["197"],"React Hook useEffect has missing dependencies: 'accessToken', 'profileId', and 'refreshToken'. Either include them or remove the dependency array.",["198"],"Assignments to the 'isMounted' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has missing dependencies: 'Logout', 'accessToken', and 'refreshToken'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has missing dependencies: 'accessToken' and 'refreshToken'. Either include them or remove the dependency array.",["200"],"React Hook useEffect has missing dependencies: 'accessToken', 'questionId', and 'refreshToken'. Either include them or remove the dependency array.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [likedBy, userId]",{"range":"216","text":"217"},"Update the dependencies array to be: [likedBy]",{"range":"218","text":"219"},"Update the dependencies array to be: [Logout, accessToken, questionId, refreshToken]",{"range":"220","text":"221"},"Update the dependencies array to be: [accessToken, profileId, refreshToken]",{"range":"222","text":"223"},"Update the dependencies array to be: [Logout, accessToken, refreshToken]",{"range":"224","text":"225"},"Update the dependencies array to be: [accessToken, refreshToken]",{"range":"226","text":"227"},"Update the dependencies array to be: [accessToken, questionId, refreshToken]",{"range":"228","text":"229"},[1050,1052],"[likedBy, userId]",[1181,1183],"[likedBy]",[1799,1801],"[Logout, accessToken, questionId, refreshToken]",[2826,2828],"[accessToken, profileId, refreshToken]",[1817,1819],"[Logout, accessToken, refreshToken]",[1108,1110],"[accessToken, refreshToken]",[1099,1101],"[accessToken, questionId, refreshToken]"]